[package]
name = "bios-framework"
version = "0.1.0"
authors = ["gudaoxuri"]
description = "BIOS project foundation framework"
keywords = ["bios", "http", "web", "framework", "async"]
categories = [
    "network-programming",
    "asynchronous",
    "web-programming::http-server",
    "web-programming::websocket"
]
homepage = "https://bios.idealworld.group/framework"
repository = "https://github.com/ideal-world/bios"
license = "Apache-2.0"
edition = "2018"
exclude = ["/.travis.yml"]
readme = "README.adoc"

[profile.release]
lto = true
codegen-units = 1

[lib]
name = "bios"
path = "src/lib.rs"

[features]
default = ["rslog", "web-server"]

rslog = ["log4rs"]

web-server = ["actix-web", "actix-http", "actix-service", "actix-cors", "validator", "actix-router", "mime", "serde_qs", "serde_urlencoded"]

web-client = ["awc", "actix-http"]

openapi = ["web-server", "paperclip"]

reldb = ["sea-query", "sqlx"]

cache = ["redis"]

mq = ["lapin", "amq-protocol-types", "async-global-executor"]

test = ["testcontainers"]

[dependencies]
# Basic
serde = { version = "^1", features = ["derive"] }
serde_json = "^1"
derive_more = "^0"
log = "^0"
regex = "^1"
chrono = { version = "^0", features = ["serde"] }
rust_decimal = { version = "^1" }
env_logger = "^0"
log4rs = { version = "^1", optional = true }
config = "^0"
url = "^2"
lazy_static = "^1"
futures = "^0"
futures-util = "^0"
base64 = "^0"
uuid = { version = "^0", features = ["serde", "v4"] }
strum = { version = "^0", features = ["derive"] }
rust-crypto = "^0"
async-trait = "^0"

# Web
actix-web = { version = "4.0.0-beta.19", default-features = false, features = ["compress-gzip", "rustls"], optional = true }
actix-http = { version = "3.0.0-beta.18", optional = true }
actix-service = { version = "^2", optional = true }
actix-cors = { version = "0.6.0-beta.8", optional = true }
actix-router = { version = "0.5.0-beta.4", optional = true }
awc = { version = "3.0.0-beta.18", features = ["rustls"], optional = true }
validator = { version = "^0", features = ["derive"], optional = true }
mime = { version = "^0", optional = true }
serde_qs = { version = "^0", features = ["actix"], optional = true }
serde_urlencoded = { version = "^0", optional = true }

# OpenAPI
paperclip = { version = "^0", features = ["actix"], optional = true }

# RelDB
sea-query = { version = "^0", default-features = false, features = ["derive", "backend-mysql", "backend-postgres", "sqlx-mysql", "sqlx-postgres", "with-chrono", "with-rust_decimal"], optional = true }
sqlx = { version = "^0", default-features = false, features = ["macros", "mysql", "postgres", "chrono", "decimal", "runtime-tokio-native-tls"], optional = true }

# Redis
redis = { version = "^0", features = ["tokio-comp"], optional = true }

# Rabbit
lapin = { version = "^1", optional = true }
amq-protocol-types = { version = "^6", optional = true }
async-global-executor = { version = "^2", optional = true }

# Test
testcontainers = { version = "^0", optional = true }

[dev-dependencies]
# Common
tokio = { version = "^1", features = ["time", "rt", "macros"] }
actix-rt = "^2"
http = "0.2.5"

[[test]]
name = "test_web_server"
required-features = ["test", "web-client"]

[[test]]
name = "test_web_client"
required-features = ["test", "web-client"]

[[test]]
name = "test_cache_client"
required-features = ["test", "testcontainers", "cache"]

[[test]]
name = "test_mq_client"
required-features = ["test", "mq"]

[[test]]
name = "test_reldb_client"
required-features = ["test", "reldb"]
